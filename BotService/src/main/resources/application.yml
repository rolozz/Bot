server:
  port: 8081

spring:
  application:
   name: BotService

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: microservice-a-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"


telegram:
  bot:
    username: YourDaddyBroBot
    token: 1041138600:AAH8y_TV9GAQCYsA93hzmiG11icnqKoUYC0
    nasa_key: nS5zpfblxt2aIWGfAbTX0g6RgiowykErhhAMo6hm



resilience4j:
  circuitbreaker:
    instances:
      getRandomPhoto:
        registerHealthIndicator: true
        failureRateThreshold: 50
        waitDurationInOpenState: 5000ms
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 2
      getLocationName:
        registerHealthIndicator: true
        failureRateThreshold: 50
        waitDurationInOpenState: 5000ms
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 2